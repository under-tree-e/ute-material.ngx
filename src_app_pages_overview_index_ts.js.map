{"version":3,"file":"src_app_pages_overview_index_ts.js","mappings":"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","sources":["./src/app/pages/overview/index.ts","./src/app/pages/overview/overview.ts","./src/app/pages/overview/overview.html","./src/app/shared/code-parser/code-parser.ts","./src/app/shared/doc-fetcher/doc-fetcher.ts","./src/app/shared/header-link/header-link.ts","./src/app/shared/table-of-contents/table-of-contents.ts","./src/app/shared/table-of-contents/table-of-contents.html","./node_modules/@angular/cdk/fesm2022/clipboard.mjs","./node_modules/@angular/material/fesm2022/snack-bar.mjs"],"sourcesContent":["export * from \"./overview\";\n","import { ApplicationRef, ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Injector, OnInit, SecurityContext, ViewChild, ViewContainerRef, ViewEncapsulation } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { DocFetcher } from \"src/app/shared/doc-fetcher/doc-fetcher\";\nimport { PageItem } from \"src/app/shared/page-manager/page-manager\";\nimport { AsyncPipe, NgIf } from \"@angular/common\";\nimport { TableOfContents } from \"src/app/shared/table-of-contents/table-of-contents\";\nimport { Observable, map } from \"rxjs\";\nimport { BreakpointObserver } from \"@angular/cdk/layout\";\nimport { HeaderLink } from \"src/app/shared/header-link/header-link\";\nimport { ComponentPortal, DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { CodeParser } from \"src/app/shared/code-parser/code-parser\";\n\n@Component({\n    selector: \"app-overview\",\n    templateUrl: \"./overview.html\",\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [NgIf, TableOfContents, AsyncPipe],\n})\nexport class Overview implements OnInit {\n    public pageItem: PageItem | undefined;\n    public showToc: Observable<boolean>;\n    public docContent: string = \"Loading document...\";\n\n    private docItem: HTMLElement | undefined;\n\n    @ViewChild(\"toc\") tableOfContents!: TableOfContents;\n\n    constructor(\n        private appRef: ApplicationRef,\n        public elementRef: ElementRef,\n        private domSanitizer: DomSanitizer,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private viewContainerRef: ViewContainerRef,\n        private injector: Injector,\n        private docFetcher: DocFetcher,\n        private route: ActivatedRoute,\n        private breakpointObserver: BreakpointObserver,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.showToc = breakpointObserver.observe(\"(max-width: 1200px)\").pipe(\n            map((result) => {\n                this.changeDetectorRef.detectChanges();\n                return !result.matches;\n            })\n        );\n    }\n\n    ngOnInit(): void {\n        this.route.parent?.params.subscribe((p: any) => {\n            if (p.id) {\n                this.pageItem = p;\n                this.loadDoc();\n            }\n        });\n        this.route.parent?.data.subscribe((d: any) => {\n            if (d.id) {\n                this.pageItem = d;\n                this.loadDoc();\n            }\n        });\n    }\n\n    private loadDoc() {\n        this.docContent = \"Loading document...\";\n        if (this.pageItem) {\n            const url: string = this.pageItem.page ? `assets/docs/${this.pageItem.id}.html` : `assets/docs/components/${this.pageItem.id}.html`;\n            this.docFetcher.fetchDocument(url).subscribe({\n                next: (d) => this.updateDocument(d),\n                error: (e) => (this.docContent = `Failed to load document: ${this.pageItem!.id}. Error: ${e.statusText}`),\n            });\n        } else {\n            this.docContent = `Incorrect Url`;\n        }\n    }\n\n    private updateDocument(rawDocument: string) {\n        rawDocument = rawDocument.replace(/href=\"#([^\"]*)\"/g, (_m: string, fragmentUrl: string) => {\n            const absoluteUrl = `${location.pathname}#${fragmentUrl}`;\n            return `href=\"${this.domSanitizer.sanitize(SecurityContext.URL, absoluteUrl)}\"`;\n        });\n\n        this.docContent = \"\";\n        this.docItem = [...this.elementRef.nativeElement.children].find((cd: any) => cd.classList.contains(\"docs-component-overview\")) as HTMLElement;\n        this.docItem.innerHTML = rawDocument;\n\n        setTimeout(() => {\n            this.updateTableOfContents();\n            this.loadLinks();\n            this.loadCodes();\n        }, 0);\n    }\n\n    private updateTableOfContents() {\n        if (this.tableOfContents) {\n            this.tableOfContents.addHeaders(\"Overview Content\", this.elementRef.nativeElement, 0);\n            this.tableOfContents.updateScrollPosition();\n        }\n    }\n\n    private loadLinks() {\n        const exampleElements = this.elementRef.nativeElement.querySelectorAll(`span[header-link]`);\n\n        [...exampleElements].forEach((element: Element) => {\n            const portalHost = new DomPortalOutlet(element, this.componentFactoryResolver, this.appRef, this.injector);\n            const examplePortal = new ComponentPortal(HeaderLink, this.viewContainerRef);\n            const exampleViewer = portalHost.attach(examplePortal);\n\n            const exampleViewerComponent = exampleViewer.instance as HeaderLink;\n            exampleViewerComponent.example = element.getAttribute(\"header-link\")!;\n        });\n    }\n\n    private loadCodes() {\n        const exampleElements = this.elementRef.nativeElement.querySelectorAll(`pre code`);\n\n        [...exampleElements].forEach((element: Element) => {\n            const exampleViewerDiv = document.createElement(\"div\");\n            exampleViewerDiv.classList.add(\"docs-example-viewer-source\");\n            element.parentElement!.parentNode!.replaceChild(exampleViewerDiv, element.parentElement!);\n\n            const portalHost = new DomPortalOutlet(exampleViewerDiv, this.componentFactoryResolver, this.appRef, this.injector);\n            const examplePortal = new ComponentPortal(CodeParser, this.viewContainerRef);\n            const exampleViewer = portalHost.attach(examplePortal);\n\n            const exampleViewerComponent = exampleViewer.instance as CodeParser;\n            exampleViewerComponent.text = element.textContent!;\n            exampleViewerComponent.addCode(element.parentElement!);\n        });\n    }\n}\n","<h2 class=\"cdk-visually-hidden\" tabindex=\"-1\">Overview for {{pageItem ? pageItem.id : \"\"}}</h2>\n<div class=\"docs-component-view-text-content docs-component-overview\">{{docContent}}</div>\n<table-of-contents #toc container=\".mat-drawer-content\" *ngIf=\"showToc | async\"></table-of-contents>\n","import { Component, ElementRef, Input } from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Clipboard } from \"@angular/cdk/clipboard\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\n\n@Component({\n    selector: \"code-parser\",\n    template: `\n        <button\n            mat-icon-button\n            type=\"button\"\n            (click)=\"copySource()\"\n            class=\"docs-example-source-copy docs-example-button\"\n            matTooltip=\"Copy example source\"\n            title=\"Copy example source\"\n            aria-label=\"Copy example source to clipboard\"\n        >\n            <mat-icon>content_copy</mat-icon>\n        </button>\n    `,\n    standalone: true,\n    imports: [MatIconModule, MatButtonModule, MatTooltipModule],\n})\nexport class CodeParser {\n    @Input() text: string | undefined;\n\n    constructor(private readonly snackbar: MatSnackBar, private readonly clipboard: Clipboard, private elementRef: ElementRef) {}\n\n    public addCode(source: Element) {\n        this.elementRef.nativeElement.appendChild(source);\n    }\n\n    public copySource() {\n        if (this.clipboard.copy(this.text!)) {\n            this.snackbar.open(\"Code copied\", \"\", { duration: 2500 });\n        } else {\n            this.snackbar.open(\"Copy failed. Please try again!\", \"\", { duration: 2500 });\n        }\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, shareReplay, tap } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class DocFetcher {\n    private cache: Record<string, Observable<string>> = {};\n\n    constructor(private http: HttpClient) {}\n\n    public fetchDocument(url: string): Observable<string> {\n        if (this.cache[url]) {\n            return this.cache[url];\n        }\n\n        const stream = this.http.get(url, { responseType: \"text\" }).pipe(shareReplay(1));\n        return stream.pipe(tap(() => (this.cache[url] = stream)));\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Clipboard } from \"@angular/cdk/clipboard\";\n\n/**\n * Header link is a component that handles normalizing\n * the anchor jump tags with the current route url.\n *\n * For example:\n *\n *    <a href=\"#foo\">Foo</a>\n *\n * would result in the wrong url, this component\n * combines the current route with that jump link:\n *\n *    <a href=\"/guide#foo\">Foo</a>\n */\n@Component({\n    selector: \"header-link\",\n    template: `\n        <a aria-label=\"Link to this heading\" class=\"docs-markdown-a\" [attr.aria-describedby]=\"example\" [href]=\"getFragmentUrl()\" (click)=\"copyLink()\">\n            <mat-icon>link</mat-icon>\n        </a>\n    `,\n    standalone: true,\n    imports: [MatIconModule],\n})\nexport class HeaderLink {\n    /**\n     * Id of the anchor element. Note that is uses \"example\" because we instantiate the\n     * header link components through the ComponentPortal.\n     */\n    @Input() example: string | undefined;\n\n    /** Base URL that is used to build an absolute fragment URL. */\n    private _baseUrl: string;\n\n    constructor(router: Router, private readonly snackbar: MatSnackBar, private readonly clipboard: Clipboard) {\n        this._baseUrl = router.url.split(\"#\")[0];\n    }\n\n    public getFragmentUrl(): string {\n        return `${this._baseUrl}#${this.example}`;\n    }\n\n    public copyLink() {\n        // Reconstruct the URL using `origin + pathname` so we drop any pre-existing hash.\n        const fullUrl = location.origin + location.pathname + \"#\" + this.example;\n\n        if (this.clipboard.copy(fullUrl)) {\n            this.snackbar.open(\"Link copied\", \"\", { duration: 2500 });\n        } else {\n            this.snackbar.open(\"Link copy failed. Please try again!\", \"\", { duration: 2500 });\n        }\n    }\n}\n","import { AfterViewInit, Component, ElementRef, Inject, Input, OnDestroy, OnInit, NgZone, ChangeDetectorRef } from \"@angular/core\";\nimport { DOCUMENT, NgFor } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { fromEvent, Subscription } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\n\ninterface LinkSection {\n    name: string;\n    links: Link[];\n}\n\ninterface Link {\n    /* id of the section*/\n    id: string;\n\n    /* header type h3/h4 */\n    type: string;\n\n    /* If the anchor is in view of the page */\n    active: boolean;\n\n    /* name of the anchor */\n    name: string;\n\n    /* top offset px of the anchor */\n    top: number;\n}\n\n@Component({\n    selector: \"table-of-contents\",\n    styleUrls: [\"./table-of-contents.scss\"],\n    templateUrl: \"./table-of-contents.html\",\n    standalone: true,\n    imports: [NgFor],\n})\nexport class TableOfContents implements OnInit, AfterViewInit, OnDestroy {\n    @Input() container: string | undefined;\n\n    _linkSections: LinkSection[] = [];\n    _links: Link[] = [];\n    _rootUrl = this._router.url.split(\"#\")[0];\n\n    private _scrollContainer: HTMLElement | Window | null = null;\n    private _urlFragment = \"\";\n    private subscriptions = new Subscription();\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _element: ElementRef,\n        @Inject(DOCUMENT) private _document: Document,\n        private _ngZone: NgZone,\n        private _changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.subscriptions.add(\n            this._route.fragment.subscribe((fragment) => {\n                if (fragment != null) {\n                    this._urlFragment = fragment;\n\n                    const target = document.getElementById(this._urlFragment);\n                    if (target) {\n                        target.scrollIntoView();\n                    }\n                }\n            })\n        );\n    }\n\n    ngOnInit(): void {\n        // On init, the sidenav content element doesn't yet exist, so it's not possible\n        // to subscribe to its scroll event until next tick (when it does exist).\n        this._ngZone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                this._scrollContainer = this.container ? (this._document.querySelector(this.container) as HTMLElement) : window;\n\n                if (this._scrollContainer) {\n                    this.subscriptions.add(\n                        fromEvent(this._scrollContainer, \"scroll\")\n                            .pipe(debounceTime(10))\n                            .subscribe(() => this.onScroll())\n                    );\n                }\n            });\n        });\n    }\n\n    ngAfterViewInit() {\n        this.updateScrollPosition();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.unsubscribe();\n    }\n\n    updateScrollPosition(): void {\n        this._document.getElementById(this._urlFragment)?.scrollIntoView();\n    }\n\n    resetHeaders() {\n        this._linkSections = [];\n        this._links = [];\n    }\n\n    addHeaders(sectionName: string, docViewerContent: HTMLElement, sectionIndex = 0) {\n        const links = Array.from(docViewerContent.querySelectorAll(\"h3, h4\"), (header) => {\n            // remove the 'link' icon name from the inner text\n            const name = (header as HTMLElement).innerText.trim().replace(/^link/, \"\");\n            const { top } = header.getBoundingClientRect();\n            return {\n                name,\n                type: header.tagName.toLowerCase(),\n                top: top,\n                id: header.id,\n                active: false,\n            };\n        });\n\n        this._linkSections[sectionIndex] = { name: sectionName, links };\n        this._links.push(...links);\n    }\n\n    /** Gets the scroll offset of the scroll container */\n    private getScrollOffset(): number | void {\n        const { top } = this._element.nativeElement.getBoundingClientRect();\n        const container = this._scrollContainer;\n\n        if (container instanceof HTMLElement) {\n            return container.scrollTop + top;\n        }\n\n        if (container) {\n            return container.pageYOffset + top;\n        }\n    }\n\n    private onScroll(): void {\n        const scrollOffset = this.getScrollOffset();\n        let hasChanged = false;\n\n        if (scrollOffset == null) {\n            return;\n        }\n\n        for (let i = 0; i < this._links.length; i++) {\n            // A link is considered active if the page is scrolled past the\n            // anchor without also being scrolled passed the next link.\n            const currentLink = this._links[i];\n            const nextLink = this._links[i + 1];\n            const isActive = scrollOffset >= currentLink.top && (!nextLink || nextLink.top >= scrollOffset);\n\n            if (isActive !== currentLink.active) {\n                currentLink.active = isActive;\n                hasChanged = true;\n            }\n        }\n\n        if (hasChanged) {\n            // The scroll listener runs outside of the Angular zone so\n            // we need to bring it back in only when something has changed.\n            this._ngZone.run(() => this._changeDetectorRef.markForCheck());\n        }\n    }\n}\n","<div *ngFor=\"let linkSection of _linkSections\" class=\"docs-toc-container\">\n  <div class=\"docs-toc-heading\">{{linkSection?.name}}</div>\n  <nav [attr.aria-label]=\"linkSection?.name + ' Table of Contents'\">\n    <a [href]=\"_rootUrl + '#' + link.id\"\n      *ngFor=\"let link of linkSection?.links; let i = index\"\n      class=\"docs-level-{{link.type}} docs-link\"\n      [class.docs-active]=\"link.active\">\n      {{link.name}}\n    </a>\n  </nav>\n</div>\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        // The element needs to be inserted into the fullscreen container, if the page\n        // is in fullscreen mode, otherwise the browser won't execute the copy command.\n        (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Clipboard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: CdkCopyToClipboard, isStandalone: true, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                }] }], propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\nclass ClipboardModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: ClipboardModule, imports: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: ClipboardModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, Injector, TemplateRef, Injectable, Optional, SkipSelf, NgModule } from '@angular/core';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSnackBarLabel, isStandalone: true, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSnackBarActions, isStandalone: true, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSnackBarAction, isStandalone: true, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: SimpleSnackBar, isStandalone: true, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"component\", type: MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatButton, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], standalone: true, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: () => [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }] });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\nlet uniqueId = 0;\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        this._document = inject(DOCUMENT);\n        this._trackedModals = new Set();\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /** Unique ID of the aria-live element. */\n        this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            // _animationState lives in host bindings and `detectChanges` does not refresh host bindings\n            // so we have to call `markForCheck` to ensure the host view is refreshed eventually.\n            this._changeDetectorRef.markForCheck();\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    /**\n     * Removes the element in a microtask. Helps prevent errors where we end up\n     * removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        queueMicrotask(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with the\n        // `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarContainer, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSnackBarContainer, isStandalone: true, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"] }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }], _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to apply for handset mode. */\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2.LiveAnnouncer }, { token: i0.Injector }, { token: i3.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBar, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i2.LiveAnnouncer }, { type: i0.Injector }, { type: i3.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }] });\n\nconst DIRECTIVES = [MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction];\nclass MatSnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], exports: [MatCommonModule, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarModule, providers: [MatSnackBar], imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        OverlayModule,\n                        PortalModule,\n                        MatButtonModule,\n                        MatCommonModule,\n                        SimpleSnackBar,\n                        ...DIRECTIVES,\n                    ],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatSnackBar],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n"],"names":["SecurityContext","AsyncPipe","NgIf","TableOfContents","map","HeaderLink","ComponentPortal","DomPortalOutlet","CodeParser","i0","ɵɵelement","Overview","constructor","appRef","elementRef","domSanitizer","componentFactoryResolver","viewContainerRef","injector","docFetcher","route","breakpointObserver","changeDetectorRef","docContent","showToc","observe","pipe","result","detectChanges","matches","ngOnInit","parent","params","subscribe","p","id","pageItem","loadDoc","data","d","url","page","fetchDocument","next","updateDocument","error","e","statusText","rawDocument","replace","_m","fragmentUrl","absoluteUrl","location","pathname","sanitize","URL","docItem","nativeElement","children","find","cd","classList","contains","innerHTML","setTimeout","updateTableOfContents","loadLinks","loadCodes","tableOfContents","addHeaders","updateScrollPosition","exampleElements","querySelectorAll","forEach","element","portalHost","examplePortal","exampleViewer","attach","exampleViewerComponent","instance","example","getAttribute","exampleViewerDiv","document","createElement","add","parentElement","parentNode","replaceChild","text","textContent","addCode","_","ɵɵdirectiveInject","ApplicationRef","ElementRef","i1","DomSanitizer","ComponentFactoryResolver","ViewContainerRef","Injector","i2","DocFetcher","i3","ActivatedRoute","i4","BreakpointObserver","ChangeDetectorRef","_2","selectors","viewQuery","Overview_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","Overview_table_of_contents_4_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate","ɵɵproperty","ɵɵpipeBind1","encapsulation","MatIconModule","MatButtonModule","MatTooltipModule","snackbar","clipboard","source","appendChild","copySource","copy","open","duration","MatSnackBar","Clipboard","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CodeParser_Template","ɵɵlistener","CodeParser_Template_button_click_0_listener","MatIcon","MatIconButton","i5","MatTooltip","shareReplay","tap","http","cache","stream","get","responseType","ɵɵinject","HttpClient","factory","ɵfac","providedIn","router","_baseUrl","split","getFragmentUrl","copyLink","fullUrl","origin","Router","HeaderLink_Template","HeaderLink_Template_a_click_0_listener","ɵɵsanitizeUrl","ɵɵattribute","DOCUMENT","NgFor","fromEvent","Subscription","debounceTime","ɵɵclassMapInterpolate1","link_r3","type","ɵɵclassProp","active","ctx_r2","_rootUrl","name","TableOfContents_div_0_a_4_Template","linkSection_r1","links","_router","_route","_element","_document","_ngZone","_changeDetectorRef","_linkSections","_links","_scrollContainer","_urlFragment","subscriptions","fragment","target","getElementById","scrollIntoView","runOutsideAngular","Promise","resolve","then","container","querySelector","window","onScroll","ngAfterViewInit","ngOnDestroy","unsubscribe","resetHeaders","sectionName","docViewerContent","sectionIndex","Array","from","header","innerText","trim","top","getBoundingClientRect","tagName","toLowerCase","push","getScrollOffset","HTMLElement","scrollTop","pageYOffset","scrollOffset","hasChanged","i","length","currentLink","nextLink","isActive","run","markForCheck","NgZone","TableOfContents_Template","TableOfContents_div_0_Template","styles","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","textarea","_textarea","style","position","opacity","left","setAttribute","value","readOnly","fullscreenElement","body","successful","currentFocus","activeElement","select","setSelectionRange","execCommand","focus","destroy","remove","undefined","pendingCopy","beginCopy","Clipboard_Factory","t","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","args","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","config","attempts","copied","_pending","Set","remainingAttempts","pending","attempt","_destroyed","_currentTimeout","delete","emit","clearTimeout","clear","CdkCopyToClipboard_Factory","ɵdir","ɵɵdefineDirective","hostBindings","CdkCopyToClipboard_HostBindings","CdkCopyToClipboard_click_HostBindingHandler","ɵɵInputFlags","None","outputs","selector","host","ClipboardModule","ClipboardModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","Component","ViewEncapsulation","ChangeDetectionStrategy","inject","ViewChild","TemplateRef","SkipSelf","MatButton","Subject","trigger","state","transition","animate","BasePortalOutlet","CdkPortalOutlet","TemplatePortal","PortalModule","Breakpoints","i1$1","OverlayConfig","OverlayModule","takeUntil","MatCommonModule","SimpleSnackBar_Conditional_2_Template","_r2","ɵɵgetCurrentView","SimpleSnackBar_Conditional_2_Template_button_click_1_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","action","ctx_r0","_c0","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","_onExit","_finishDismiss","dismiss","closed","exit","_durationTimeoutId","dismissWithAction","complete","closeWithAction","_dismissAfter","min","_open","dispose","dismissedByAction","afterDismissed","afterOpened","_onEnter","onAction","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MatSnackBarLabel","MatSnackBarLabel_Factory","hostAttrs","MatSnackBarActions","MatSnackBarActions_Factory","MatSnackBarAction","MatSnackBarAction_Factory","SimpleSnackBar","snackBarRef","hasAction","SimpleSnackBar_Factory","ɵcmp","ɵɵdefineComponent","exportAs","SimpleSnackBar_Template","message","ɵɵconditional","dependencies","changeDetection","OnPush","matSnackBarAnimations","snackBarState","transform","uniqueId","MatSnackBarContainer","_elementRef","_platform","snackBarConfig","_trackedModals","_announceDelay","_onAnnounce","_animationState","_liveElementId","attachDomPortal","portal","_assertNotAttached","_portalOutlet","_afterPortalAttached","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","onAnimationEnd","event","fromState","toState","_completeExit","onEnter","enter","_screenReaderAnnounce","_announceTimeoutId","_clearFromModals","queueMicrotask","panelClasses","panelClass","isArray","cssClass","_exposeToModals","label","_label","labelClass","toggle","modals","modal","ariaOwns","indexOf","newValue","removeAttribute","hasAttached","Error","inertElement","liveElement","focusedElement","isBrowser","MatSnackBarContainer_Factory","Platform","MatSnackBarContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","MatSnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatSnackBarContainer_animation_state_done_HostBindingHandler","$event","ɵɵsyntheticHostProperty","ɵɵInheritDefinitionFeature","MatSnackBarContainer_Template","animation","Default","animations","static","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","_openedSnackBarRef","_parentSnackBar","_snackBarRefAtThisLevel","_overlay","_injector","_breakpointObserver","_defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","openFromComponent","component","_attach","openFromTemplate","_config","_attachSnackBarContainer","overlayRef","userInjector","create","providers","provide","useValue","containerPortal","containerRef","content","userConfig","_createOverlay","$implicit","_createInjector","contentRef","HandsetPortrait","detachments","overlayElement","announce","_animateSnackBar","overlayConfig","direction","positionStrategy","global","isRtl","isLeft","isRight","right","centerHorizontally","bottom","MatSnackBar_Factory","Overlay","LiveAnnouncer","DIRECTIVES","MatSnackBarModule","MatSnackBarModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[8,9]}